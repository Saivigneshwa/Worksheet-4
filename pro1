#include <iostream>
using namespace std;

class Complex {
private:
    float real, imag;

public:
     
    Complex() {
        real = 0;
        imag = 0;
    }

    
    Complex(float r, float i) {
        real = r;
        imag = i;
    }

    
    Complex(const Complex &c) {
        real = c.real;
        imag = c.imag;
    }

   
    ~Complex() {
         Just to show when destructor is called
         cout << "Destructor called for (" << real << ", " << imag << "i)\n";
    }

     
    void getdata() {
        cout << "Enter real part: ";
        cin >> real;
        cout << "Enter imaginary part: ";
        cin >> imag;
    }

    
    void showdata() {
        cout << real << " + " << imag << "i" << endl;
    }

    
    Complex add_complex(Complex c1, Complex c2) {
        Complex temp;
        temp.real = c1.real + c2.real;
        temp.imag = c1.imag + c2.imag;
        return temp;
    }
};

int main() {
    Complex c1, c2, c3;

    cout << "Enter first complex number:\n";
    c1.getdata();

    cout << "Enter second complex number:\n";
    c2.getdata();

    Add two complex numbers
    c3 = c3.add_complex(c1, c2);

    cout << "\nFirst Complex Number: ";
    c1.showdata();

    cout << "Second Complex Number: ";
    c2.showdata();

    cout << "Sum of Complex Numbers: ";
    c3.showdata();

    return 0;
}
